#!/bin/bash

# Tool for extracting information from an elasticsearch-style yaml file.
# Requires yq (the one from python-pip, not the other one)

set -e
err_report() {
    echo "errexit on line $(caller)" >&2
}
trap err_report ERR

YQ=/usr/local/bin/yq

yaml_expand_forms() {
    # recursively enumerate all the collapsed forms of a json entity
    # we leave out the outermost double quotes at each stage, to save time
    # adding and then re-stripping them at each recursion stage
    # this means that the final output is missing its outermost double quotes,
    # so we have to add them afterwards
    local head=${1%%.*}
    local tail=${1#*.}
    if [[ "$tail" != "$1" ]]; then
        for tail_form in $(yaml_expand_forms $tail); do
            echo $head'"."'$tail_form
            echo $head.$tail_form
        done
    else
        echo "$head"
    fi
}

yaml_extract() {
    # perform a recursive tree search for all collapsed forms of the search term
    local key="$1"
    local file="$2"
    local result=null
    for searchterm in $(yaml_expand_forms "$key"); do
        # remember to add the double quotes, see expand_forms above
        result=$($YQ '."'$searchterm'"' "$file")
        if [[ "$result" != null ]]; then
            # Strip quotes from the value
            result="${result#\"}"
            result="${result%\"}"
            echo $result
            return
        fi
    done
    echo
}

yaml_replace() {
    # perform a recursive tree search for all collapsed forms of the search term
    local key=${1%%=*}
    local value="${1#*=}"
    local file=$2
    local result=null
    for searchterm in $(yaml_expand_forms "$key"); do
        # remember to add the double quotes, see expand_forms above
        result=$($YQ '."'$searchterm'"' "$file")
        if [[ "$result" != null ]]; then
            cp "$file" "${file}.bak"
            $YQ -y '."'$searchterm'" |= "'"$value"'"' "${file}.bak" > "$file"
            return
        fi
    done
}

if [[ $1 == "-r" ]]; then
    yaml_replace "$2" "$3"
else
    yaml_extract "$1" "$2"
fi
